state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
# The Map!
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
# Maine increased by 438 occurrences.
# Interactive Map
ggplotly(percent_change_map, tooltop = "Change in Disasters")
# Interactive Map
ggplotly(percent_change_map, tooltip = "Change in Disasters")
# Interactive Map
ggplotly(percent_change_map)
# Interactive Map
ggplotly(percent_change_map)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
# Interactive Map
ggplotly(percent_change_map)
g <- ggplot() +
geom_polygon(data = us, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=shootings, aes(x=lng, y=lat, size = num_killed, color = num_injured,
text = paste('lng: ', lng,
'<br>net_change = Net Change'
View(graph_df3)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change))
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change)) %>%
pull(greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change)) %>%
pull(greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change)) %>%
pull(largest_increase = greatest_increase)
View(grestest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(largest_increase = greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max("net_change", na.rm = TRUE)) %>%
pull(largest_increase = greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(largest_increase = greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(largest_increase <- greatest_increase)
View(grestest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, "na.rm" = TRUE)) %>%
pull(largest_increase <- greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE))
View(grestest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pullgreatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
# Frequency of Disasters in 2000
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
# Frequency of Disasters in 2020
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
# Unique States
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
restest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
gestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
FALSE, code = readLines("chart_3.R"), fig.width = 10, fig.height = 5}
b11grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
bbgrestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
View(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
ggplotly(percent_change_map)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, greatest_increase)
us_disaster_declarations <- read.csv("us_disaster_declarations.csv")
summary_info <- list()
#Find percent change for Washington State
summary_info <- append(summary_info, pct_change)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, greatest_increase)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, "greatest_increase")
View(summary_info)
summary_info <- list()
#Find percent change for Washington State
summary_info <- append(summary_info, "pct_change")
# Find year during which most disasters occurred
summary_info <- append(summary_info, year_max_disasters)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, "greatest_increase")
#Find 5 year range that had the most disaster declarations
summary_info <- append(summary_info, most_disasters)
#Find percent change for Washington State
summary_info <- append(summary_info, "pct_change")
# Find year during which most disasters occurred
summary_info <- append(summary_info, year_max_disasters)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, "greatest_increase")
View(summary_info)
#Find 5 year range that had the most disaster declarations
summary_info <- append(summary_info, "most_disasters")
View(summary_info)
```{r, echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, message = FALSE, code = readLines("chart_3.R"), fig.width = 10, fig.height = 5}
g <- ggplot() +
geom_polygon(data = us, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=graph_df3, aes(x=lng, y=lat, size = num_killed, color = num_injured,
text = paste('lng: ', lng)
'<br>net_change = Net Change'))
ggplotly(percent_change_map)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
# Frequency of Disasters in 2000
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
# Frequency of Disasters in 2020
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
# Unique States
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
ggplotly(percent_change_map)
ggplotly(net_change_map)
net_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
ggplotly(net_change_map)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
net_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "pink", "red"))
ggplotly(net_change_map)
net_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "darkred"))
ggplotly(net_change_map)
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
View(freq_2020_disasters)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, greatest_increase)
summary_info <- list()
#Find percent change for Washington State
summary_info <- append(summary_info, pct_change)
#Find percent change for Washington State
summary_info <- append(summary_info, pct_change)
# Find year during which most disasters occurred
summary_info <- append(summary_info, year_max_disasters)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, greatest_increase)
#Find 5 year range that had the most disaster declarations
summary_info <- append(summary_info, most_disasters)
#Find state that most commonly had the most disasters for every 5 year period
summary_info <- append(summary_info, state_most_common)
# This chart plots the number of disasters that occurred each year and finds the year during which maximum number of disasters occurred
# Load packages
library ("dplyr")
library("ggplot2")
# Load datasets
natural_disasters <- read.csv("us_disaster_declarations.csv")
disasters_each_year <- natural_disasters %>% group_by(fy_declared) %>% summarise(number_disasters = n())
# Find year during which most disasters occurred
year_max_disasters <- disasters_each_year %>% filter(number_disasters == max(number_disasters)) %>% pull(fy_declared)
# Plot values from all years
ggplot(disasters_each_year) +
geom_line(mapping = aes(x = fy_declared, y = number_disasters), color = "blue") +
geom_point(mapping = aes(x = fy_declared, y = number_disasters), color  = "red") +
labs(title = "Number of disasters by year", x = "Year", y = "Number of Natural Disasters") +
scale_x_continuous(breaks = round(seq(1953, 2022, by = 1))) +
scale_y_continuous(breaks = round(seq(0, 9500, by = 1000))) +
theme(axis.text.x = element_text(angle = 90))
library("readr")
library("dplyr")
library("ggplot2")
us_disaster_declarations <- read_csv("us_disaster_declarations.csv")
WA_disaster <- us_disaster_declarations %>%
filter(state == 'WA')
ggplot (WA_disaster, aes(incident_begin_date)) +
geom_histogram(color = "red", fill = "blue") +
labs(title = "Number of Natural Disasters in Washington by year", x = "Year", y = "Number of diasters")
disasters_each_year <- WA_disaster %>% group_by(fy_declared) %>% summarise(number_disasters = n())
pct_change <- max(disasters_each_year$number_disasters) / min(disasters_each_year$number_disasters)
View(disasters_each_year)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
us_disaster_declarations <- read.csv("us_disaster_declarations.csv")
library(DescTools)
library(tidyverse)
library(knitr)
#set range parameters
year_interval <- 5
start_year <-RoundTo(min(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = floor)
end_year <- RoundTo(max(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = ceiling)
#find number of disasters per range of years
summary_table <- us_disaster_declarations %>%
group_by(Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize("Number of Disasters" = length(fy_declared))
#find overall number of each unique disaster by range of years
number_of_disasters_by_type <- us_disaster_declarations %>%
group_by(incident_type,Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize(number_of_incidents = length(incident_type)) %>%
pivot_wider(names_from = incident_type, values_from = number_of_incidents) %>%
select(Years, Flood, Hurricane, Tornado, Earthquake, Fire, 'Severe Storm(s)')
#change NA values to 0
number_of_disasters_by_type[is.na(number_of_disasters_by_type)] = 0
#find state with most natural disasters per range of years
most_common_state <- us_disaster_declarations %>%
group_by(state, Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize(number_of_disasters = length(incident_type)) %>%
group_by(Years) %>%
filter(number_of_disasters == max(number_of_disasters)) %>%
summarize('State With Most Disasters' = state)
#join number of unique disaster types per range to overall disasters per range
summary_table <- left_join(summary_table, most_common_state)
summary_table <- left_join(summary_table, number_of_disasters_by_type)
summary_table <- summary_table[-1,]
#reorder columns
summary_table <- summary_table %>% relocate('State With Most Disasters', .after = 'Severe Storm(s)')
#Display table
kable(summary_table[], caption = "Aggregate Data on United States Disaster Declarations in 5 Year Ranges")
#Find Year range with most disasters
most_disasters <- paste0(summary_table %>% filter(`Number of Disasters` == max(`Number of Disasters`)) %>% pull(Years))
#Fix most_disasters formatting
most_disasters <- gsub("\\(|\\]|","", most_disasters)
most_disasters <- gsub(",", "-", most_disasters)
#Find State that most commonly has the most disasters
state_most_common <- summary_table %>% count(`State With Most Disasters`) %>% filter(n == max(n)) %>% pull(`State With Most Disasters`)
state_most_common <- summary_table %>% count(`State With Most Disasters`) %>% filter(n == max(n)) %>% pull(`State With Most Disasters`)
us_disaster_declarations <- read.csv("us_disaster_declarations.csv")
library(DescTools)
library(tidyverse)
library(knitr)
#set range parameters
year_interval <- 5
start_year <-RoundTo(min(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = floor)
end_year <- RoundTo(max(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = ceiling)
#find number of disasters per range of years
summary_table <- us_disaster_declarations %>%
group_by(Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize("Number of Disasters" = length(fy_declared))
#find overall number of each unique disaster by range of years
number_of_disasters_by_type <- us_disaster_declarations %>%
group_by(incident_type,Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize(number_of_incidents = length(incident_type)) %>%
pivot_wider(names_from = incident_type, values_from = number_of_incidents) %>%
select(Years, Flood, Hurricane, Tornado, Earthquake, Fire, 'Severe Storm(s)')
#change NA values to 0
number_of_disasters_by_type[is.na(number_of_disasters_by_type)] = 0
#find state with most natural disasters per range of years
most_common_state <- us_disaster_declarations %>%
group_by(state, Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize(number_of_disasters = length(incident_type)) %>%
group_by(Years) %>%
filter(number_of_disasters == max(number_of_disasters)) %>%
summarize('State With Most Disasters' = state)
#join number of unique disaster types per range to overall disasters per range
summary_table <- left_join(summary_table, most_common_state)
summary_table <- left_join(summary_table, number_of_disasters_by_type)
summary_table <- summary_table[-1,]
#reorder columns
summary_table <- summary_table %>% relocate('State With Most Disasters', .after = 'Severe Storm(s)')
#Display table
kable(summary_table[], caption = "Aggregate Data on United States Disaster Declarations in 5 Year Ranges")
#Find Year range with most disasters
most_disasters <- paste0(summary_table %>% filter(`Number of Disasters` == max(`Number of Disasters`)) %>% pull(Years))
#Fix most_disasters formatting
most_disasters <- gsub("\\(|\\]|","", most_disasters)
most_disasters <- gsub(",", "-", most_disasters)
#Find State that most commonly has the most disasters
state_most_common <- summary_table %>% count(`State With Most Disasters`) %>% filter(n == max(n)) %>% pull(`State With Most Disasters`)
library(DescTools)
library(tidyverse)
library(knitr)
us_disaster_declarations <- read.csv("us_disaster_declarations.csv")
library(DescTools)
library(tidyverse)
library(knitr)
#set range parameters
year_interval <- 5
start_year <-RoundTo(min(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = floor)
end_year <- RoundTo(max(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = ceiling)
#find number of disasters per range of years
summary_table <- us_disaster_declarations %>%
group_by(Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize("Number of Disasters" = length(fy_declared))
#find overall number of each unique disaster by range of years
number_of_disasters_by_type <- us_disaster_declarations %>%
group_by(incident_type,Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize(number_of_incidents = length(incident_type)) %>%
pivot_wider(names_from = incident_type, values_from = number_of_incidents) %>%
select(Years, Flood, Hurricane, Tornado, Earthquake, Fire, 'Severe Storm(s)')
#change NA values to 0
number_of_disasters_by_type[is.na(number_of_disasters_by_type)] = 0
#find state with most natural disasters per range of years
most_common_state <- us_disaster_declarations %>%
group_by(state, Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize(number_of_disasters = length(incident_type)) %>%
group_by(Years) %>%
filter(number_of_disasters == max(number_of_disasters)) %>%
summarize('State With Most Disasters' = state)
#join number of unique disaster types per range to overall disasters per range
summary_table <- left_join(summary_table, most_common_state)
summary_table <- left_join(summary_table, number_of_disasters_by_type)
summary_table <- summary_table[-1,]
#reorder columns
summary_table <- summary_table %>% relocate('State With Most Disasters', .after = 'Severe Storm(s)')
#Display table
kable(summary_table[], caption = "Aggregate Data on United States Disaster Declarations in 5 Year Ranges")
#Find Year range with most disasters
most_disasters <- paste0(summary_table %>% filter(`Number of Disasters` == max(`Number of Disasters`)) %>% pull(Years))
#Fix most_disasters formatting
most_disasters <- gsub("\\(|\\]|","", most_disasters)
most_disasters <- gsub(",", "-", most_disasters)
#Find State that most commonly has the most disasters
state_most_common <- summary_table %>% count(`State With Most Disasters`) %>% filter(n == max(n)) %>% pull(`State With Most Disasters`)
year_interval <- 5
start_year <-RoundTo(min(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = floor)
end_year <- RoundTo(max(us_disaster_declarations$fy_declared), multiple = year_interval, FUN = ceiling)
#find number of disasters per range of years
summary_table <- us_disaster_declarations %>%
group_by(Years = cut(fy_declared, breaks = seq(start_year, end_year, year_interval))) %>%
summarize("Number of Disasters" = length(fy_declared))
#Find State that most commonly has the most disasters
state_most_common <- summary_table %>% count(`State With Most Disasters`) %>% filter(n == max(n)) %>% pull(`State With Most Disasters`)
library(DescTools)
install.packages("DescTools")
View(state_abbreviations)
