View(largest_pct_increase)
View(graph_df3_increase)
largest_pct_increase <- graph_df3_increase %>%
summarize(largest_pct_increase = max(pct_change)) %>%
pull(region)
largest_pct_increase <- graph_df3_increase %>%
filter(pct_change == max(pct_change)) %>%
pull(region)
largest_pct_increase <- graph_df3_increase %>%
filter(pct_change == max(pct_change)) %>%
pull(unique(region))
largest_pct_increase <- graph_df3_increase %>%
filter(pct_change == max(pct_change)) %>%
pull(unique(region))
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
largest_pct_increase <- graph_df3_increase %>%
filter(pct_change == max(pct_change)) %>%
pull(region)
summary_info <- append(summary_info, largest_pct_state_increase)
summary_info <- list()
summary_info <- append(summary_info, pct_change)
ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white") +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_fermenter(
type = "seq",
palette = "Oranges",
direction = 1,
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill"
)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white") +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_fermenter(
type = "seq",
palette = "Oranges",
direction = 1,
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill"
)
View(graph_df3)
dis_by_st_2000 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2000)
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
dis_by_st_2000 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2000)
frequency_2000 <- dis_by_st_2000 %>%
group_by(disaster_number) %>%
mutate(frequency_2000 = n())
View(frequency_2000)
dis_by_st_2020 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2020)
frequency_2020 <- dis_by_st_2020 %>%
count('state')
frequency_2020 <- dis_by_st_2020 %>%
group_by(disaster_number) %>%
mutate(frequency_2020 = n())
frequency_2020 <- dis_by_st_2020 %>%
count('state')
frequency_2020 <- dis_by_st_2020 %>%
group_by(disaster_number) %>%
mutate(frequency_2020 = n())
freq_2000_vs_2020 <- left_join(frequency_2020, frequency_2000, by = 'state')
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) %>%
mutate(pct_change = (net_change / frequency_2020)*100)
ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white") +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_fermenter(
type = "seq",
palette = "Oranges",
direction = 1,
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill"
)
graph_df3 <- left_join(state_code, freq_2000_vs_2020, by = 'state')
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
View(state_abbreviations)
View(States)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
View(state_code)
graph_df3 <- left_join(state_code, freq_2000_vs_2020, by = 'state')
ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white") +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_fermenter(
type = "seq",
palette = "Oranges",
direction = 1,
na.value = "grey50",
guide = "colourbar",
aesthetics = "fill"
)
View(graph_df3)
View(state_code)
state_code <- left_join(States, state_abbreviations, by = 'region')
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) %>%
mutate(pct_change = (net_change / frequency_2020)*100)
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, freq_2000_vs_2020, by = 'state')
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
dis_by_st_2000 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2000)
# Frequency of Disasters in 2000
frequency_2000 <- dis_by_st_2000 %>%
group_by(disaster_number) %>%
mutate(frequency_2000 = n())
##### TEST 1 ITERATION
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
#####
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
dis_by_st_2020 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2020)
# Frequency of Disasters in 2020
frequency_2020 <- dis_by_st_2020 %>%
group_by(disaster_number) %>%
mutate(frequency_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(frequency_2020, frequency_2000, by = 'state')
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) %>%
mutate(pct_change = (net_change / frequency_2020)*100)
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
state_code <- left_join(States, state_abbreviations, by = 'region')
freq_2000_vs_2020['state', 'pct_change']
freq_2000_vs_2020[['state', 'pct_change']]
test <- freq_2000_vs_2020 %>%
select(state, pct_change)
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) %>%
mutate(pct_change = (net_change / frequency_2020)*100)
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
select(state, pct_change)
View(test_freq_2000_vs_2020)
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
select(state, pct_change) %>%
distinct(state)
View(test_freq_2000_vs_2020)
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
select(distinct(state), pct_change)
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state) %>%
select(state, pct_change)
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, pct_change) %>%
select(state, pct_change)
View(test_freq_2000_vs_2020)
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
View(graph_df3)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white", size = 0) +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"), values = rescale(c(0, 50, 100))
)
# The Map!
library(scales)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white", size = 0) +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"), values = rescale(c(0, 50, 100))
)
# Interactive Map
library(plotly)
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
largest_pct_increase <- graph_df3 %>%
filter(pct_change == max(pct_change)) %>%
pull(region)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = pct_change),
color = "white", size = 0) +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
View(graph_df3)
View(freq_2000_vs_2020)
View(frequency_2000)
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) %>%
mutate(pct_change = (net_change / frequency_2000)*100)
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) # %>%
#### getting unique
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white", size = 0) +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"), values = rescale(c(0, 50, 100))
)
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white", size = 0) +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
largest_pct_increase <- graph_df3 %>%
filter(pct_change == max(pct_change)) %>%
pull(region)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
## 2000 DATA
# Filter Disasters in 2000
dis_by_st_2000 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2000)
# Frequency of Disasters in 2000
frequency_2000 <- dis_by_st_2000 %>%
group_by(disaster_number) %>%
mutate(frequency_2000 = n())
##### TEST 1 ITERATION
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
#####
## 2020 DATA
# Filter for 2020 Disasters
dis_by_st_2020 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2020)
# Frequency of Disasters in 2020
frequency_2020 <- dis_by_st_2020 %>%
group_by(disaster_number) %>%
mutate(frequency_2020 = n())
## Combining and Comparing
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(frequency_2020, frequency_2000, by = 'state')
#freq_2000_vs_2020[pct_change, ]
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) # %>%
# mutate(pct_change = (net_change / frequency_2000)*100)
#### getting unique
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
# The Map!
library(scales)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
library(plotly)
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
# Maine increased by 438 occurrences.
States <- map_data('state')
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
##### TEST 1 ITERATION
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
## Test2 and Comparing
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2000 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(frequency_2020, frequency_2000, by = 'state')
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) # %>%
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000))
View(freq_2000_vs_2020)
## Test2 and Comparing
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
#### getting unique
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
state_abbreviations$region = tolower(state_abbreviations$region)
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
ggplotly(percent_change_map)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
# Frequency of Disasters in 2000
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
# Frequency of Disasters in 2020
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
# Unique States
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
# The Map!
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
# Maine increased by 438 occurrences.
# Interactive Map
ggplotly(percent_change_map, tooltop = "Change in Disasters")
# Interactive Map
ggplotly(percent_change_map, tooltip = "Change in Disasters")
# Interactive Map
ggplotly(percent_change_map)
