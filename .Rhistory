ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters",
subtitle = 'by %, 2000-2020',
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Longitude",
y = "Latitude") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
largest_pct_increase <- graph_df3 %>%
filter(pct_change == max(pct_change)) %>%
pull(region)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
ggplotly(percent_change_map)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
## 2000 DATA
# Filter Disasters in 2000
dis_by_st_2000 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2000)
# Frequency of Disasters in 2000
frequency_2000 <- dis_by_st_2000 %>%
group_by(disaster_number) %>%
mutate(frequency_2000 = n())
##### TEST 1 ITERATION
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
#####
## 2020 DATA
# Filter for 2020 Disasters
dis_by_st_2020 <- disaster_data %>%
group_by(state) %>%
filter(fy_declared == 2020)
# Frequency of Disasters in 2020
frequency_2020 <- dis_by_st_2020 %>%
group_by(disaster_number) %>%
mutate(frequency_2020 = n())
## Combining and Comparing
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(frequency_2020, frequency_2000, by = 'state')
#freq_2000_vs_2020[pct_change, ]
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) # %>%
# mutate(pct_change = (net_change / frequency_2000)*100)
#### getting unique
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
# The Map!
library(scales)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
library(plotly)
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
# Maine increased by 438 occurrences.
States <- map_data('state')
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
##### TEST 1 ITERATION
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
## Test2 and Comparing
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2000 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(frequency_2020, frequency_2000, by = 'state')
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000)) # %>%
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (frequency_2020 - frequency_2000))
View(freq_2000_vs_2020)
## Test2 and Comparing
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, % Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
#### getting unique
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
state_abbreviations$region = tolower(state_abbreviations$region)
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
ggplotly(percent_change_map)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
# Frequency of Disasters in 2000
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
# Frequency of Disasters in 2020
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
# Unique States
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
# The Map!
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = " ",
y = " ",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "goldenrod2", "darkred"))
# Interactive Map
ggplotly(percent_change_map)
# Which U.S. state experienced the greatest increase in natural disasters since 2000?
# Maine increased by 438 occurrences.
# Interactive Map
ggplotly(percent_change_map, tooltop = "Change in Disasters")
# Interactive Map
ggplotly(percent_change_map, tooltip = "Change in Disasters")
# Interactive Map
ggplotly(percent_change_map)
# Interactive Map
ggplotly(percent_change_map)
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
# Interactive Map
ggplotly(percent_change_map)
g <- ggplot() +
geom_polygon(data = us, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=shootings, aes(x=lng, y=lat, size = num_killed, color = num_injured,
text = paste('lng: ', lng,
'<br>net_change = Net Change'
View(graph_df3)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change))
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change)) %>%
pull(greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change)) %>%
pull(greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change)) %>%
pull(largest_increase = greatest_increase)
View(grestest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(largest_increase = greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max("net_change", na.rm = TRUE)) %>%
pull(largest_increase = greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(largest_increase = greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(largest_increase <- greatest_increase)
View(grestest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, "na.rm" = TRUE)) %>%
pull(largest_increase <- greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE))
View(grestest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pullgreatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull(greatest_increase)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
# Frequency of Disasters in 2000
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
# Frequency of Disasters in 2020
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
# Unique States
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
restest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
gestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
FALSE, code = readLines("chart_3.R"), fig.width = 10, fig.height = 5}
b11grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
bbgrestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
View(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
ggplotly(percent_change_map)
percent_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
ggplotly(percent_change_map)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, greatest_increase)
us_disaster_declarations <- read.csv("us_disaster_declarations.csv")
summary_info <- list()
#Find percent change for Washington State
summary_info <- append(summary_info, pct_change)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, greatest_increase)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, "greatest_increase")
View(summary_info)
summary_info <- list()
#Find percent change for Washington State
summary_info <- append(summary_info, "pct_change")
# Find year during which most disasters occurred
summary_info <- append(summary_info, year_max_disasters)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, "greatest_increase")
#Find 5 year range that had the most disaster declarations
summary_info <- append(summary_info, most_disasters)
#Find percent change for Washington State
summary_info <- append(summary_info, "pct_change")
# Find year during which most disasters occurred
summary_info <- append(summary_info, year_max_disasters)
#Find the state that had the great total increase in natural disasters
summary_info <- append(summary_info, "greatest_increase")
View(summary_info)
#Find 5 year range that had the most disaster declarations
summary_info <- append(summary_info, "most_disasters")
View(summary_info)
```{r, echo = FALSE, warning = FALSE, message = FALSE, error = FALSE, message = FALSE, code = readLines("chart_3.R"), fig.width = 10, fig.height = 5}
g <- ggplot() +
geom_polygon(data = us, aes(x=long, y = lat, group = group), fill="grey", alpha=0.3) +
geom_point(data=graph_df3, aes(x=lng, y=lat, size = num_killed, color = num_injured,
text = paste('lng: ', lng)
'<br>net_change = Net Change'))
ggplotly(percent_change_map)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
library("readr")
library("dplyr")
library("ggplot2")
library("maps")
library("mapdata")
library("scales")
library("plotly")
States <- map_data('state')
disaster_data <- read.csv("us_disaster_declarations.csv")
state_abbreviations <- read.csv("abbreviations.csv")
# Frequency of Disasters in 2000
freq_2000_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2000) %>%
mutate(freq_2000 = n())
# Frequency of Disasters in 2020
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
# Combine the 2000 and 2020 data into a single dataframe
freq_2000_vs_2020 <- left_join(freq_2020_disasters, freq_2000_disasters, by = 'state')
# Create new variables: Change in Disasters, Change in Disasters
freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
mutate(net_change = (freq_2020 - freq_2000)) # %>%
# Unique States
test_freq_2000_vs_2020 <- freq_2000_vs_2020 %>%
distinct(state, net_change) %>%
select(state, net_change)
# Renaming columns to left_join later
colnames(state_abbreviations) <- c('region', 'abbrev', 'state')
state_abbreviations$region = tolower(state_abbreviations$region)
# Combining the state names with their 2-digit code
state_code <- left_join(States, state_abbreviations, by = 'region')
# The data for the graph! States template + frequency data
graph_df3 <- left_join(state_code, test_freq_2000_vs_2020, by = 'state')
ggplotly(percent_change_map)
ggplotly(net_change_map)
net_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "blue"))
ggplotly(net_change_map)
grestest_increase <- graph_df3 %>%
summarize(grestest_increase = max(net_change, na.rm = TRUE)) %>%
pull()
net_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "pink", "red"))
ggplotly(net_change_map)
net_change_map <- ggplot(States) +
geom_polygon(data = graph_df3,
aes(x = long, y = lat, group=group, fill = net_change),
color = "white") +
labs(title = "Increase in Natural Disasters by Frequency",
x = "Latitude",
y = "Longitude",
fill = "Increase in # of Disasters") +
scale_fill_gradientn(colors = c("white", "red", "darkred"))
ggplotly(net_change_map)
freq_2020_disasters <- disaster_data %>%
group_by(state, disaster_number) %>%
filter(fy_declared == 2020) %>%
mutate(freq_2020 = n())
View(freq_2020_disasters)
